// Base class
class Person {
    String name;
    int age;

    // Constructor
    Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    // Method to display information
    void displayInfo() {
        System.out.println("Name: " + name + ", Age: " + age);
    }
}

// Subclass of Person
class Student extends Person {
    String studentID;
    String course;
    int units;
    final int feePerUnit = 1000;

    // Constructor
    Student(String name, int age, String studentID, String course, int units) {
        super(name, age);
        this.studentID = studentID;
        this.course = course;
        this.units = units;
    }

    // Calculate total fees
    double calculateFees() {
        return units * feePerUnit;
    }

    // Override displayInfo method
    @Override
    void displayInfo() {
        super.displayInfo();
        System.out.println("Student ID: " + studentID + ", Course: " + course + ", Units: " + units + ", Total Fee: " + calculateFees());
    }
}

// Subclass of Person
class Instructor extends Person {
    String employeeID;
    String department;
    double salary;

    // Constructor
    Instructor(String name, int age, String employeeID, String department, double salary) {
        super(name, age);
        this.employeeID = employeeID;
        this.department = department;
        this.salary = salary;
    }

    // Override displayInfo method
    @Override
    void displayInfo() {
        super.displayInfo();
        System.out.println("Employee ID: " + employeeID + ", Department: " + department + ", Salary: " + salary);
    }
}

// Test program
public class UniversityEnrolment {
    // Method to print details
    static void printDetails(Person p) {
        p.displayInfo();
    }

    public static void main(String[] args) {
        // Creating Student objects
        Student student1 = new Student("elise", 25, "S123", "Tourism ", 15);
        Student student2 = new Student("hazel", 19, "S124", "Computer engineering", 12);

        // Creating Instructor objects
        Instructor instructor1 = new Instructor("Dr. Catimbang",55 , "E001", "Computer engineering", 75000);
        Instructor instructor2 = new Instructor("Prof. Tanya", 33, "E002", "Tourism", 80000);

        // Printing details
        printDetails(student1);
        printDetails(student2);
        printDetails(instructor1);
        printDetails(instructor2);
    }
}

